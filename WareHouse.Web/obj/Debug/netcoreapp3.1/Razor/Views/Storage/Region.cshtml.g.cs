#pragma checksum "D:\MyProject\OneDrive - OBA GG\C#\Warehouse\WareHouse.Web\Views\Storage\Region.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "99f3cdc652b94268365bf8ddde95f957f043a803"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Storage_Region), @"mvc.1.0.view", @"/Views/Storage/Region.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"99f3cdc652b94268365bf8ddde95f957f043a803", @"/Views/Storage/Region.cshtml")]
    public class Views_Storage_Region : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\MyProject\OneDrive - OBA GG\C#\Warehouse\WareHouse.Web\Views\Storage\Region.cshtml"
  
    ViewData["Title"] = "仓库区域管理";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div>
    <button type=""button"" class=""btn btn-cyan"" data-toggle=""modal"" data-target="".choose-modal-lg"">选择已有区域</button>
    <div class=""modal fade choose-modal-lg"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myLargeModalLabel"" style=""display: none;"">
        <div class=""modal-dialog modal-lg"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><span aria-hidden=""true"">×</span></button>
                    <h4 class=""modal-title"" id=""myLargeModalLabel"">所有区域</h4>
                </div>
                <div class=""modal-body"">
                    <table class=""table table-striped table-hover"" id=""choose-table"">
                    </table>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">关闭</button>
                </div>
            </div>
        ");
            WriteLiteral(@"</div>
    </div>

    <button type=""button"" class=""btn btn-cyan"" data-toggle=""modal"" data-target="".add-modal-lg"">添加新区域并加入</button>
    <div class=""modal fade add-modal-lg"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myLargeModalLabel"" style=""display: none;"">
        <div class=""modal-dialog modal-lg"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><span aria-hidden=""true"">×</span></button>
                    <h4 class=""modal-title"" id=""title"">添加新区域并加入</h4>
                </div>
                <div class=""modal-body"">
                    <form");
            BeginWriteAttribute("action", " action=\"", 1826, "\"", 1835, 0);
            EndWriteAttribute();
            WriteLiteral(" method=\"post\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"name\">名称</label>\r\n                            <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" placeholder=\"请输入区域名称..\"");
            BeginWriteAttribute("required", " required=\"", 2074, "\"", 2085, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                        </div>
                        <div class=""form-group"">
                            <label for=""capacity"">容量</label>
                            <input class=""form-control"" type=""number"" id=""capacity"" name=""capacity"" placeholder=""请输入区域容量..""");
            BeginWriteAttribute("required", " required=\"", 2356, "\"", 2367, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                        </div>
                        <div class=""form-group"">
                            <button id=""add-btn"" class=""btn btn-primary"" type=""submit"">添加</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <table class=""table table-striped table-hover"" id=""region-table"">
    </table>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        $('#region-table').bootstrapTable({
            method: 'get',
            url: ""/Storage/GetAllStorageRegion?id="" + GetId(), //请求路径
            striped: true, //是否显示行间隔色
            pageNumber: 1, //初始化加载第一页
            pagination: true, //是否分页
            sidePagination: 'client', //server:服务器端分页|client：前端分页
            pageSize: 5, //单页记录数
            pageList: [5, 10, 20, 30], //可选择单页记录数
            showRefresh: true, //刷新按钮
            columns: [
                {
                    field: ""storageRegionId"",
                    title: ""主键""
                }, {
                    field: ""name"",
                    title: ""区域名称""
                }, {
                    field: ""capacity"",
                    title: ""区域容量""
                }, {
                    field: ""storageRegionId"",
                    title: ""操作"",
                    formatter: function (value, row, index) {
                        var html = '';
                        html += ""<butt");
                WriteLiteral(@"on class='btn btn-default' onclick='del("" + value + "")'>删除</button>"";
                        return html;
                    }
                }
            ],
            responseHandler: function (res) {
                console.log(res);
                //console.log(typeof res);
                return res.region;
            }
        });

        function del(id) {
            $.ajax({
                url: '/Storage/DeleteStorageRegion',
                data: {
                    id: id
                },
                type: 'post',
                success: function () {
                    window.location.reload(true);
                },
                error: function (res) {
                    alert(res);
                }
            });
        }

        function add(id) {
            $.ajax({
                url: '/Storage/AddStorageRegion',
                data: {
                    RegionId: id,
                    StorageId: GetId()
                },
  ");
                WriteLiteral(@"              type: 'post',
                success: function () {
                    //window.location.reload(true);
                    window.location.href = ""/Storage/Region?id="" + GetId();
                },
                error: function (res) {
                    alert(res);
                }
            });
        }

        $('#choose-table').bootstrapTable({
            method: 'get',
            url: ""/Storage/GetAllRegion"", //请求路径
            striped: true, //是否显示行间隔色
            pageNumber: 1, //初始化加载第一页
            pagination: true, //是否分页
            sidePagination: 'client', //server:服务器端分页|client：前端分页
            pageSize: 5, //单页记录数
            pageList: [5, 10, 20, 30], //可选择单页记录数
            showRefresh: true, //刷新按钮
            columns: [
                {
                    field: ""id"",
                    title: ""主键""
                }, {
                    field: ""name"",
                    title: ""区域名称""
                }, {
                    field: ");
                WriteLiteral(@"""capacity"",
                    title: ""区域容量""
                }, {
                    field: ""id"",
                    title: ""操作"",
                    formatter: function (value, row, index) {
                        var html = '';
                        html += ""<button class='btn btn-default' onclick='add("" + value + "")'>添加</button>"";
                        return html;
                    }
                }
            ]
        });
    </script>

    <script>
        $(""#add-btn"").click(function () {
            var data = {
                storageId:GetId(),
                regionName: $(""#name"").val(),
                regionCapacity: $(""#capacity"").val()
            };
            console.log(data);
            $.post({
                url: '");
#nullable restore
#line 173 "D:\MyProject\OneDrive - OBA GG\C#\Warehouse\WareHouse.Web\Views\Storage\Region.cshtml"
                 Write(Url.Action("AddNewRegion"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\',\r\n                data: data,\r\n                success: function(res) {\r\n                }\r\n            });\r\n        });\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
